Model,Parameters,MSE,MAE,R2,Explained Variance
RandomForestRegressor,"memory=None; steps=[('preprocessor', ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])])), ('regressor', RandomForestRegressor(max_depth=10, min_samples_leaf=2, min_samples_split=5,
                      random_state=42))]; verbose=False; preprocessor=ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]); regressor=RandomForestRegressor(max_depth=10, min_samples_leaf=2, min_samples_split=5,
                      random_state=42); preprocessor__n_jobs=None; preprocessor__remainder=drop; preprocessor__sparse_threshold=0.3; preprocessor__transformer_weights=None; preprocessor__transformers=[('num', StandardScaler(), ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]; preprocessor__verbose=False; preprocessor__verbose_feature_names_out=True; preprocessor__num=StandardScaler(); preprocessor__num__copy=True; preprocessor__num__with_mean=True; preprocessor__num__with_std=True; regressor__bootstrap=True; regressor__ccp_alpha=0.0; regressor__criterion=squared_error; regressor__max_depth=10; regressor__max_features=auto; regressor__max_leaf_nodes=None; regressor__max_samples=None; regressor__min_impurity_decrease=0.0; regressor__min_samples_leaf=2; regressor__min_samples_split=5; regressor__min_weight_fraction_leaf=0.0; regressor__n_estimators=100; regressor__n_jobs=None; regressor__oob_score=False; regressor__random_state=42; regressor__verbose=0; regressor__warm_start=False",2087.3471837272373,18.8626160723444,0.6309713048164198,0.644534578268721
GradientBoostingRegressor,"memory=None; steps=[('preprocessor', ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])])), ('regressor', GradientBoostingRegressor(learning_rate=0.01, n_estimators=200, random_state=42))]; verbose=False; preprocessor=ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]); regressor=GradientBoostingRegressor(learning_rate=0.01, n_estimators=200, random_state=42); preprocessor__n_jobs=None; preprocessor__remainder=drop; preprocessor__sparse_threshold=0.3; preprocessor__transformer_weights=None; preprocessor__transformers=[('num', StandardScaler(), ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]; preprocessor__verbose=False; preprocessor__verbose_feature_names_out=True; preprocessor__num=StandardScaler(); preprocessor__num__copy=True; preprocessor__num__with_mean=True; preprocessor__num__with_std=True; regressor__alpha=0.9; regressor__ccp_alpha=0.0; regressor__criterion=friedman_mse; regressor__init=None; regressor__learning_rate=0.01; regressor__loss=squared_error; regressor__max_depth=3; regressor__max_features=None; regressor__max_leaf_nodes=None; regressor__min_impurity_decrease=0.0; regressor__min_samples_leaf=1; regressor__min_samples_split=2; regressor__min_weight_fraction_leaf=0.0; regressor__n_estimators=200; regressor__n_iter_no_change=None; regressor__random_state=42; regressor__subsample=1.0; regressor__tol=0.0001; regressor__validation_fraction=0.1; regressor__verbose=0; regressor__warm_start=False",1460.2079920939314,23.09007617694674,0.7418452214274891,0.748601512499362
MLPRegressor,"memory=None; steps=[('preprocessor', ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])])), ('regressor', MLPRegressor(hidden_layer_sizes=(100, 100, 100), random_state=42))]; verbose=False; preprocessor=ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]); regressor=MLPRegressor(hidden_layer_sizes=(100, 100, 100), random_state=42); preprocessor__n_jobs=None; preprocessor__remainder=drop; preprocessor__sparse_threshold=0.3; preprocessor__transformer_weights=None; preprocessor__transformers=[('num', StandardScaler(), ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]; preprocessor__verbose=False; preprocessor__verbose_feature_names_out=True; preprocessor__num=StandardScaler(); preprocessor__num__copy=True; preprocessor__num__with_mean=True; preprocessor__num__with_std=True; regressor__activation=relu; regressor__alpha=0.0001; regressor__batch_size=auto; regressor__beta_1=0.9; regressor__beta_2=0.999; regressor__early_stopping=False; regressor__epsilon=1e-08; regressor__hidden_layer_sizes=(100, 100, 100); regressor__learning_rate=constant; regressor__learning_rate_init=0.001; regressor__max_fun=15000; regressor__max_iter=200; regressor__momentum=0.9; regressor__n_iter_no_change=10; regressor__nesterovs_momentum=True; regressor__power_t=0.5; regressor__random_state=42; regressor__shuffle=True; regressor__solver=adam; regressor__tol=0.0001; regressor__validation_fraction=0.1; regressor__verbose=False; regressor__warm_start=False",1420.5808508135585,18.671430158330196,0.748851028776911,0.7627099373678327
SVR,"memory=None; steps=[('preprocessor', ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])])), ('regressor', SVR(C=100, epsilon=0.2))]; verbose=False; preprocessor=ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]); regressor=SVR(C=100, epsilon=0.2); preprocessor__n_jobs=None; preprocessor__remainder=drop; preprocessor__sparse_threshold=0.3; preprocessor__transformer_weights=None; preprocessor__transformers=[('num', StandardScaler(), ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]; preprocessor__verbose=False; preprocessor__verbose_feature_names_out=True; preprocessor__num=StandardScaler(); preprocessor__num__copy=True; preprocessor__num__with_mean=True; preprocessor__num__with_std=True; regressor__C=100; regressor__cache_size=200; regressor__coef0=0.0; regressor__degree=3; regressor__epsilon=0.2; regressor__gamma=scale; regressor__kernel=rbf; regressor__max_iter=-1; regressor__shrinking=True; regressor__tol=0.001; regressor__verbose=False",1143.1565233643632,14.47226931161273,0.797897751032262,0.797956266148734
XGBRegressor,"memory=None; steps=[('preprocessor', ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])])), ('regressor', XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.01, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=200, n_jobs=None,
             num_parallel_tree=None, random_state=42, ...))]; verbose=False; preprocessor=ColumnTransformer(transformers=[('num', StandardScaler(),
                                 ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]); regressor=XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.01, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=200, n_jobs=None,
             num_parallel_tree=None, random_state=42, ...); preprocessor__n_jobs=None; preprocessor__remainder=drop; preprocessor__sparse_threshold=0.3; preprocessor__transformer_weights=None; preprocessor__transformers=[('num', StandardScaler(), ['TDS', 'Cl', 'Na', 'K', 'CHARGEBAL'])]; preprocessor__verbose=False; preprocessor__verbose_feature_names_out=True; preprocessor__num=StandardScaler(); preprocessor__num__copy=True; preprocessor__num__with_mean=True; preprocessor__num__with_std=True; regressor__objective=reg:squarederror; regressor__base_score=None; regressor__booster=None; regressor__callbacks=None; regressor__colsample_bylevel=None; regressor__colsample_bynode=None; regressor__colsample_bytree=0.7; regressor__device=None; regressor__early_stopping_rounds=None; regressor__enable_categorical=False; regressor__eval_metric=None; regressor__feature_types=None; regressor__gamma=None; regressor__grow_policy=None; regressor__importance_type=None; regressor__interaction_constraints=None; regressor__learning_rate=0.01; regressor__max_bin=None; regressor__max_cat_threshold=None; regressor__max_cat_to_onehot=None; regressor__max_delta_step=None; regressor__max_depth=7; regressor__max_leaves=None; regressor__min_child_weight=None; regressor__missing=nan; regressor__monotone_constraints=None; regressor__multi_strategy=None; regressor__n_estimators=200; regressor__n_jobs=None; regressor__num_parallel_tree=None; regressor__random_state=42; regressor__reg_alpha=None; regressor__reg_lambda=None; regressor__sampling_method=None; regressor__scale_pos_weight=None; regressor__subsample=0.7; regressor__tree_method=None; regressor__validate_parameters=None; regressor__verbosity=None",1177.4807890782158,21.19821995652068,0.791829455787338,0.796195916408146
